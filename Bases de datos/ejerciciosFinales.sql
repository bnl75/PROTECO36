/*
* Bernal SÃ¡nchez Diego Arturo
* Prebe 12
* 06/04/18
*/


--EJERCICIO 1.a
SELECT C.CLAVE_GRUPO, C.CUPO_MAXIMO, P.NOMBRE, H.DIA_SEMANA, H.HORA_INICIO, H.HORA_FIN
FROM ASIGNATURA A
      INNER JOIN CURSO C ON A.ASIGNATURA_ID = C.ASIGNATURA_ID
      INNER JOIN PROFESOR P ON P.PROFESOR_ID = C.PROFESOR_ID
      INNER JOIN CURSO_HORARIO CH ON CH.CURSO_ID = C.CURSO_ID
      INNER JOIN HORARIO H ON H.HORARIO_ID = CH.HORARIO_ID
      INNER JOIN SEMESTRE S ON C.SEMESTRE_ID = S.SEMESTRE_ID
WHERE A.NOMBRE = 'CALCULO 2' AND S.ANIO = 2008 AND S.PERIODO = 1;


--EJERCICIO 1.b
SELECT A.NOMBRE, C.CURSO_ID, C.CLAVE_GRUPO
FROM ASIGNATURA A
      INNER JOIN CURSO C ON C.ASIGNATURA_ID = A.ASIGNATURA_ID
      INNER JOIN ESTUDIANTE_INSCRITO EI ON C.CURSO_ID = EI.CURSO_ID
WHERE EI.CALIFICACION IS NULL;


--EJERCICIO 2.a
SELECT *
FROM PROFESOR P
      NATURAL JOIN CURSO C
WHERE P.APELLIDO_PATERNO = 'KRAUCE';


--EJERCICIO 2.b
  --SINTAXIS ANTIGUA
SELECT P.PROFESOR_ID, P.NOMBRE, P.APELLIDO_PATERNO, P.APELLIDO_MATERNO, C.CLAVE_GRUPO
FROM PROFESOR P, CURSO C, SEMESTRE S, ASIGNATURA A
WHERE P.PROFESOR_ID = C.PROFESOR_ID AND C.SEMESTRE_ID = S.SEMESTRE_ID AND S.SEMESTRE_ID = 1 AND C.ASIGNATURA_ID = A.ASIGNATURA_ID AND A.NOMBRE = 'BASES DE DATOS';

  --NATURAL JOIN -------------------------------------------------------------------------------------------
SELECT PROFESOR_ID, NOMBRE, APELLIDO_PATERNO, APELLIDO_MATERNO, CLAVE_GRUPO
FROM PROFESOR
      NATURAL JOIN CURSO
      NATURAL JOIN SEMESTRE
      NATURAL JOIN ASIGNATURA;
WHERE NOMBRE = 'BASES DE DATOS' AND SEMESTRE_ID = 1;
-------------------------------------------------------------------------------------------------------------


--EJERCICIO 3.a
SELECT NOMBRE, APELLIDO_PATERNO, APELLIDO_MATERNO, NUM_EXAMEN
FROM ESTUDIANTE E
      FULL OUTER JOIN ESTUDIANTE_EXTRAORDINARIO EX ON E.ESTUDIANTE_ID = EX.ESTUDIANTE_ID
      FULL OUTER JOIN PLAN_ESTUDIOS PE ON E.PLAN_ESTUDIOS_ID = PE.PLAN_ESTUDIOS_ID
WHERE E.PLAN_ESTUDIOS_ID = 2;


--EJERCICIO 3.b
SELECT P.NOMBRE, P.APELLIDO_PATERNO, P.APELLIDO_MATERNO, C.CLAVE_GRUPO
FROM PROFESOR P
      FULL OUTER JOIN CURSO C ON C.PROFESOR_ID = P.PROFESOR_ID WHERE EXISTS (
          SELECT C.CLAVE_GRUPO, A.NOMBRE
          FROM CURSO C
              FULL OUTER JOIN ASIGNATURA A
                  ON C.ASIGNATURA_ID = A.ASIGNATURA_ID
              FULL OUTER JOIN SEMESTRE S
                  ON S.SEMESTRE_ID = C.SEMESTRE_ID);


--EJERCICIO 4
SELECT A.NOMBRE, A.CREDITOS, A.PLAN_ESTUDIOS_ID, X.NOMBRE AS ASIGNATURA_REQUERIDA
FROM ASIGNATURA A, ASIGNATURA X
WHERE A.CREDITOS = 8 AND A.ASIGNATURA_REQUERIDA_ID = X.ASIGNATURA_ID
  UNION ( SELECT NOMBRE, CREDITOS, PLAN_ESTUDIOS_ID, NULL
FROM ASIGNATURA
WHERE CREDITOS = 8
MINUS SELECT A.NOMBRE, A.CREDITOS, A.PLAN_ESTUDIOS_ID, NULL
FROM ASIGNATURA A
WHERE CREDITOS = 8 AND EXISTS(
      SELECT NOMBRE
      FROM ASIGNATURA X
      WHERE A.CREDITOS = 8 AND A.ASIGNATURA_REQUERIDA_ID = X.ASIGNATURA_ID));


--EJERCICIO 5
  --SINTAXIS ANTIGUA
SELECT *
FROM PLAN_ESTUDIOS PE, HORARIO H
WHERE PE.PLAN_ESTUDIOS_ID = PE.PLAN_ESTUDIOS_ID AND PE.CLAVE = PE.CLAVE AND PE.FECHA_APROBACION = PE.FECHA_APROBACION AND PE.FECHA_INICIO = PE.FECHA_INICIO AND PE.FECHA_FIN = PE.FECHA_FIN AND H.HORARIO_ID = H.HORARIO_ID AND H.DIA_SEMANA = H.DIA_SEMANA AND H.HORA_INICIO = H.HORA_INICIO AND H.HORA_FIN = H.HORA_FIN;
  --CROSS JOIN
SELECT * FROM PLAN_ESTUDIOS CROSS JOIN HORARIO;


/*  SUBCONSULTAS  */
--EJERCICIO 1
SELECT
  NOMBRE,
  APELLIDO_PATERNO,
  APELLIDO_MATERNO,
  FECHA_NACIMIENTO,
  (SYSDATE-FECHA_NACIMIENTO)/365.25 AS EDAD,
  'EDAD_PROMEDIO' AS EDAD_PROMEDIO,
  (SELECT AVG((SYSDATE-FECHA_NACIMIENTO)/365.25)
   FROM ESTUDIANTE)
FROM ESTUDIANTE;



--EJERCICIO 2
SELECT A.NOMBRE, C.CLAVE_GRUPO, P.NOMBRE, P.APELLIDO_PATERNO, P.APELLIDO_MATERNO, P.FECHA_NACIMIENTO
FROM PROFESOR P
    INNER JOIN CURSO C ON P.PROFESOR_ID = C.PROFESOR_ID
    INNER JOIN ASIGNATURA A ON C.ASIGNATURA_ID = A.ASIGNATURA_ID
WHERE FECHA_NACIMIENTO IN (SELECT FECHA_NACIMIENTO
                           FROM (SELECT FECHA_NACIMIENTO FROM PROFESOR NATURAL JOIN CURSO GROUP BY FECHA_NACIMIENTO ORDER BY 1 DESC)
                           WHERE ROWNUM <= 1);

--EJERCICIO 3
SELECT
  NOMBRE,
  COUNT(NOMBRE) AS NUM_CURSOS
FROM
  (SELECT *
   FROM ASIGNATURA
      NATURAL JOIN CURSO)
GROUP BY NOMBRE
HAVING COUNT(*) > 3;
